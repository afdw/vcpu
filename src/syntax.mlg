DECLARE PLUGIN "vcpu.plugin"

{
  open Stdarg
}

VERNAC COMMAND EXTEND VcpuDefine CLASSIFIED AS SIDEFF
| [ "Vcpu" "Derive" "Encoder" "for" constr(type_constr_expr)] ->
  {
    Compiler.entry_derive_encoder type_constr_expr None
  }
| [ "Vcpu" "Derive" "Encoder" "for" constr(type_constr_expr) "as" ident(output_id) ] ->
  {
    Compiler.entry_derive_encoder type_constr_expr (Some output_id)
  }
| [ "Vcpu" "Derive" "Compilation" "for" constr(c_constr_expr)] ->
  {
    Compiler.entry_derive_compilation c_constr_expr None None
  }
| [ "Vcpu" "Derive" "Compilation" "for" constr(c_constr_expr) "with" constr(wanted_repr_constr_expr)] ->
  {
    Compiler.entry_derive_compilation c_constr_expr (Some wanted_repr_constr_expr) None
  }
| [ "Vcpu" "Derive" "Compilation" "for" constr(c_constr_expr) "with" constr(wanted_repr_constr_expr) "as" ident(output_id)] ->
  {
    Compiler.entry_derive_compilation c_constr_expr (Some wanted_repr_constr_expr) (Some output_id)
  }
| [ "Vcpu" "Test" ] ->
  {
    Compiler.entry_test ()
  }
END
